// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ticket.proto

/*
Package ticketpb is a generated protocol buffer package.

It is generated from these files:
	ticket.proto

It has these top-level messages:
	Ticket
	ListRequest
	ListResponse
	CreateRequest
	CreateResponse
*/
package ticketpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Ticket struct {
	Id        string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Subject   string                     `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=updatedAt" json:"updatedAt,omitempty"`
}

func (m *Ticket) Reset()                    { *m = Ticket{} }
func (m *Ticket) String() string            { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()               {}
func (*Ticket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ticket) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Ticket) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Ticket) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Ticket) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ListResponse struct {
	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListResponse) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

type CreateRequest struct {
	Subject string `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type CreateResponse struct {
	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func init() {
	proto.RegisterType((*Ticket)(nil), "ticketpb.Ticket")
	proto.RegisterType((*ListRequest)(nil), "ticketpb.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "ticketpb.ListResponse")
	proto.RegisterType((*CreateRequest)(nil), "ticketpb.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "ticketpb.CreateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TicketService service

type TicketServiceClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
}

type ticketServiceClient struct {
	cc *grpc.ClientConn
}

func NewTicketServiceClient(cc *grpc.ClientConn) TicketServiceClient {
	return &ticketServiceClient{cc}
}

func (c *ticketServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/ticketpb.TicketService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/ticketpb.TicketService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TicketService service

type TicketServiceServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
}

func RegisterTicketServiceServer(s *grpc.Server, srv TicketServiceServer) {
	s.RegisterService(&_TicketService_serviceDesc, srv)
}

func _TicketService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketpb.TicketService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticketpb.TicketService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ticketpb.TicketService",
	HandlerType: (*TicketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _TicketService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _TicketService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ticket.proto",
}

func init() { proto.RegisterFile("ticket.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4e, 0xc3, 0x30,
	0x10, 0x45, 0x71, 0x5b, 0xa5, 0x74, 0xd2, 0x54, 0xc8, 0x12, 0x60, 0x65, 0x43, 0xe4, 0x55, 0x60,
	0xe1, 0x4a, 0x61, 0x01, 0xaa, 0xc4, 0x02, 0xb1, 0x65, 0x15, 0x7a, 0x81, 0x26, 0x19, 0x2a, 0x03,
	0x25, 0x26, 0x76, 0xb8, 0x02, 0x37, 0xe1, 0x9c, 0xa8, 0x76, 0x4c, 0x5a, 0x40, 0x62, 0x39, 0xdf,
	0xef, 0xfb, 0xcf, 0x1f, 0x98, 0x1a, 0x59, 0x3e, 0xa3, 0x11, 0xaa, 0xa9, 0x4d, 0x4d, 0x0f, 0xdd,
	0xa4, 0x8a, 0xf8, 0x6c, 0x5d, 0xd7, 0xeb, 0x17, 0x9c, 0x5b, 0xbd, 0x68, 0x1f, 0xe7, 0x46, 0x6e,
	0x50, 0x9b, 0xd5, 0x46, 0x39, 0x94, 0x7f, 0x12, 0x08, 0x96, 0x96, 0xa6, 0x33, 0x18, 0xc8, 0x8a,
	0x91, 0x84, 0xa4, 0x93, 0x7c, 0x20, 0x2b, 0xca, 0x60, 0xac, 0xdb, 0xe2, 0x09, 0x4b, 0xc3, 0x06,
	0x56, 0xf4, 0x23, 0xbd, 0x86, 0x49, 0xd9, 0xe0, 0xca, 0x60, 0x75, 0x6b, 0xd8, 0x30, 0x21, 0x69,
	0x98, 0xc5, 0xc2, 0x25, 0x09, 0x9f, 0x24, 0x96, 0x3e, 0x29, 0xef, 0xe1, 0xad, 0xb3, 0x55, 0x55,
	0xe7, 0x1c, 0xfd, 0xef, 0xfc, 0x86, 0x79, 0x04, 0xe1, 0xbd, 0xd4, 0x26, 0xc7, 0xb7, 0x16, 0xb5,
	0xe1, 0x0b, 0x98, 0xba, 0x51, 0xab, 0xfa, 0x55, 0x23, 0xbd, 0x80, 0xb1, 0x2b, 0xad, 0x19, 0x49,
	0x86, 0x69, 0x98, 0x1d, 0x09, 0x7f, 0x04, 0xe1, 0xfa, 0xe5, 0x1e, 0xe0, 0xe7, 0x10, 0xdd, 0xd9,
	0x8d, 0xba, 0xcf, 0x76, 0x9b, 0x92, 0xbd, 0xa6, 0x7c, 0x01, 0x33, 0x8f, 0x76, 0x41, 0x29, 0x04,
	0xee, 0x1f, 0x8b, 0xfe, 0x95, 0xd3, 0xbd, 0x67, 0x1f, 0x04, 0x22, 0x27, 0x3d, 0x60, 0xf3, 0x2e,
	0x4b, 0xa4, 0x57, 0x30, 0xda, 0x2e, 0x4d, 0x8f, 0x7b, 0xcf, 0x4e, 0xa7, 0xf8, 0xe4, 0xa7, 0xec,
	0x22, 0xf9, 0x01, 0xbd, 0x81, 0xc0, 0xad, 0x41, 0x4f, 0x7b, 0x66, 0xaf, 0x43, 0xcc, 0x7e, 0x3f,
	0x78, 0x7b, 0x11, 0xd8, 0xd3, 0x5e, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xf8, 0xae, 0xde,
	0x26, 0x02, 0x00, 0x00,
}
